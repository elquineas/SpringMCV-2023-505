<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 
	dataSouce : DBMS 에 연결할 통로를 만들어줄 객체(도구)
	BasicDataSource ds = new BasicDataSource(); 
	ds.setDriverClassName();
	ds.setUrl();
	ds.setUsername();
	ds.setDriverClassName();
	ds.setPassword();
	--> 
	<bean id="ds" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="addr"/>
		<property name="password" value="12341234"/>
	</bean>
	
	<bean id="sqlSessionFactory"
		  class="org.mybatis.spring.SqlSessionFactoryBean">
		  <property name="dataSource" ref="ds" />
		  <property name="typeAliasesPackage" value="com.elquineas.address.model"/>
		  <property name="mapperLocations" value="/WEB-INF/spring/mapper/*-mapper.xml"/>
	</bean>
	
	<!-- 
	     transactionManager 객체와 연계하여 Annotation 방식으로 트랜잭션을 관리
	     
	     만약 transactionManager 의 id가 transactionManager 일 경우 
	     transaction-manager="transactionManager" 속성은 생략 가능하다
	     <tx:annotation-driven />
	 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 트랜잭션 수행 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"/>
	</bean>
	<!-- 
	아래 코드에서 System.in 을 constructor-arg 라고한다.
	Scanner scan = new Scanner(System.in);
	
	SqlSessionTemplate sqlSessionTemplate = new SqlSesstionTemplate(sqlSessionFactory);
	 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!--
	mybatis에 dao page에 있는 interface를 scan해서 
	@Select, @Update, @Insert 등으로
	SQL을 만들게한다 
	-->
	<mybatis-spring:scan base-package="com.elquineas.address.dao"/>
	
</beans>
